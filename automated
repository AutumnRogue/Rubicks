// Rubix's cube automated
// If unfamiliar, I will show you the face, the edge piece and the corner piece
// I will also explain how to move the cube(R,R-,L,L-,F,F-,T,T-,B,B-,M,M-,U,U-)
// Before you start, achieve the white cross ( I will help)

//fill in the variables as required

var face = ''
var neCorner = ''
var seCorner = ''
var whiteNS = false
var top = ''
var front = ''
var shape = ''
var ready = ''


// Step one. Turn the white cross so it's facing the left and match a corner piece to the face by colour, input the face and respective  ne/se-corner color and whether the north or south side of the piece is white. 

//If a white piece is stuck in the wrong position on the left side adjust the cube so the incorrect piece is in the northwest corner and simply: 'T- F T' then repeat step one.

// You should now have a flat white side with 4 colourful 'T' shapes on each side, congratulations! Now onto step two.

//Step two. Face the white side away from you so that the yellow side is facing you and look for an edge piece that doesn't have any yellow. Have that piece point north and align it with its matching face, once this is done mark the colour of the top and front piece. Repeat until the middle row is complete.

//If a piece is stuck, use the north face's colour for the top variable and the remaining colour as the front variable, do the command, adjust so the edge is in the correct position, and then do the same command again.

//Now we have a completed side and two completed rows, almost there!

//Step three. Have the yellow side facing up, input the shape(bolt, cross, bar, fish, none)

//Step four, so close! Look for two matching corner pieces, align them with the matching face and have this point away from you. If you dont have the matching corner pieces to begin with, do the algorithm, then repeat it with the new corners in the correct place. Confirm that you're ready  (yes) to almost solve the rubix's cube!

//Step five. You can practically taste it! Are you ready? (YES). If you have a completed side, have it facing away from you, if not, make sure to adjust accordingly after doing the algorithm once.

// Awesome!!



// Step one
switch(face && neCorner) {
  case 'red':
  if(whiteNS) {
  console.log('R F R- F- ')
  } else {
    console.log('R T R R F- R F T-')
  }
  break;
}
switch(face && neCorner) {
  case 'green':
  if(whiteNS) {
  console.log('R F R- F- ')
  } else {
    console.log('R T R R F- R F T-')
  }
  break;
}
switch(face && neCorner) {
  case 'blue':
  if(whiteNS) {
  console.log('R F R- F- ')
  } else {
    console.log('R T R R F- R F T-')
  }
  break;
}
switch(face && neCorner) {
  case 'orange':
  if(whiteNS) {
  console.log('R F R- F- ')
  } else {
    console.log('R T R R F- R F T-')
  }
  break;
}
switch(face && seCorner) {
  case 'red':
  if(whiteNS) {
  console.log('R- F- R F')
  } else {
    console.log('R T- R T R- F R- F-')
  }
  break;
}
switch(face && seCorner) {
  case 'orange':
  if(whiteNS) {
  console.log('R- F- R F')
  } else {
    console.log('R T- R T R- F R- F-')
  }
  break;
}
  switch(face && seCorner) {
  case 'blue':
  if(whiteNS) {
  console.log('R- F- R F')
  } else {
    console.log('R T- R T R- F R- F-')
  }
  break;
  }
  switch(face && seCorner) {
  case 'green':
  if(whiteNS) {
  console.log('R- F- R F')
  } else {
    console.log('R T- R T R- F R- F-')
  }
  break;
  }
//Step two
 switch(top) {
   case 'red':
   if(front === 'green') {
     console.log('f u- l m- l- t l m l- m-')
   } else {
     console.log('f- u r- m r t- r- m- r  m')
   }
   break;
 } 
  switch(top) {
   case 'green':
   if(front === 'orange') {
     console.log('f u- l m- l- t l m l- m-')
   } else {
     console.log('f- u r- m r t- r- m- r  m')
   }
   break;
 } 
  switch(top) {
   case 'orange':
   if(front === 'blue') {
     console.log('f u- l m- l- t l m l- m-')
   } else {
     console.log('f- u r- m r t- r- m- r  m')
   }
   break;
 } 
  switch(top) {
   case 'blue':
   if(front === 'red') {
     console.log('f u- l m- l- t l m l- m-')
   } else {
     console.log('f- u r- m r t- r- m- r  m')
   }
   break;
 } 
  switch(top) {
   case 'red':
   if(front === 'blue') {
     console.log('f- u r- m r t- r- m- r  m')
   } else {
     console.log('f u- l m- l- t l m l- m-')
   }
   break;
 } 
  switch(top) {
   case 'blue':
   if(front === 'orange') {
     console.log('f- u r- m r t- r- m- r  m')
   } else {
     console.log('f u- l m- l- t l m l- m-')
   }
   break;
 } 
  switch(top) {
   case 'orange':
   if(front === 'green') {
     console.log('f- u r- m r t- r- m- r  m')
   } else {
     console.log('f u- l m- l- t l m l- m-')
   }
   break;
 } 
  switch(top) {
   case 'green':
   if(front === 'red') {
     console.log('f- u r- m r t- r- m- r  m')
   } else {
     console.log('f u- l m- l- t l m l- m-')
   }
   break;
 } 
 //Step three
 switch(shape) {
   case 'bolt':
   console.log('Have the bolt impact bottom left then: f u r u- r- f-')
 break;
 case 'bar':
 console.log('Turn horizontal then: f r u r- u- f-')
 break;
 case 'cross':
 if (neCorner === 'yellow') {
   console.log('r u r- u r u u r-')
 } else {
   console.log ('rotate until neCorner is yellow then input the variable')
 }
 break;
  case 'fish':
   if (neCorner === 'yellow') {
     console.log('Make sure the fish is facing bottom left then: r u r- u r u u r-')
 } else {
   console.log ('rotate until neCorner is yellow then input the variable')
   }
break;
case 'none':
console.log('r u r- u r u u r-')
break;
 }
 //Step four
 switch(ready) {
   case 'yes':
  console.log('R- F R- B B  R F- R- B B R R')
  break;
 }
 //step five
 switch(ready) {
   case 'YES':
   console.log('R U- R U R U R U- R- U- R R, repeat until finished!!')
 }
